CMAKE_MINIMUM_REQUIRED(VERSION 2.8.11)

PROJECT(dynamind-viewer)

INCLUDE(ExternalProject)

FIND_PATH(DYNAMINDDEV DynaMindDevCmake.txt
            PATHS   $ENV{DYNAMIND_DIR}/include
            PATH_SUFFIXES dynamindcore/CMake)

IF(DYNAMIND_INCLUDE_DIR)
        MESSAGE(STATUS "Compiled from toolbox")
        MESSAGE(STATUS "DYNAMIND_INCLUDE_DIR ${DYNAMIND_INCLUDE_DIR}")
        SET (DYNAMIND_CORE_LIBRARY dynamindcore)
        SET (DYNAMIND_TOOLBOX_LIBRARY dynamindtoolbox)
        MESSAGE(STATUS "${DYNAMIND_CORE_LIBRARY}")
ELSE()
        MESSAGE(STATUS "Compiled from stand alone")
        FIND_PATH(DYNAMINDDEV DynaMindDevCmake.txt
        PATHS $ENV{DYNAMIND_DIR}/include
        PATH_SUFFIXES dynamindcore/CMake)

        IF(DYNAMINDDEV)
                INCLUDE(${DYNAMINDDEV}/DynaMindDevCmake.txt)
        ELSE()
                MESSAGE(FATAL_ERROR "Could not find dynamind. Maybe not installed ?")
        ENDIF()

ENDIF()

SET(CMAKE_MODULE_PATH "${dynamind-viewer_SOURCE_DIR}/CMake/Packages")

FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(Boost COMPONENTS system REQUIRED)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_BINARY_DIR})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(src/)
INCLUDE_DIRECTORIES( ${DYNAMIND_EXTENSIONS_INCLUDE_DIR})

FILE(GLOB CPP_GUI_VIEWER_FILES *.cpp src/*.cpp src/*.h)
FILE(GLOB UI_VIEWER_FILES *.ui src/*.ui)

#TODO remove branch when build is reliable
IF(QGL_FROM_SOURCE)
    ExternalProject_Add(QGLViewer
        DOWNLOAD_COMMAND "" # skip download
        CONFIGURE_COMMAND qmake ${CMAKE_CURRENT_SOURCE_DIR}/lib/QGLViewer/QGLViewer.pro QGLVIEWER_STATIC=yes
        INSTALL_COMMAND "" # skip installation
        BUILD_COMMAND make
        BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR}
    )
    SET(QGLVIEWER_LIBRARIES ${CMAKE_CURRENT_BINARY_DIR}/libQGLViewer.a)
    INCLUDE_DIRECTORIES(lib)
ELSE()
    FIND_PACKAGE(QGLViewer REQUIRED)
    INCLUDE_DIRECTORIES(${QGLVIEWER_INCLUDE_DIR})
ENDIF()

IF(USEQT5)
    QT5_WRAP_UI(CPP_GUI_VIEWER_FILES ${UI_VIEWER_FILES})
ELSE()
    QT4_WRAP_UI(CPP_GUI_VIEWER_FILES ${UI_VIEWER_FILES})
ENDIF()

ADD_LIBRARY(dynamind-viewer STATIC ${CPP_GUI_VIEWER_FILES} ${QTGL_CPPS})

SET_TARGET_PROPERTIES(dynamind-viewer PROPERTIES AUTOMOC TRUE)

IF(${CMAKE_CXX_COMPILER_ID} STREQUAL GNU)
        SET_TARGET_PROPERTIES(dynamind-viewer PROPERTIES COMPILE_FLAGS "-frounding-math -fPIC")
ENDIF()

IF(USEQT5)
    IF (${CMAKE_CXX_COMPILER_ID} STREQUAL GNU)
           TARGET_LINK_LIBRARIES(dynamind-viewer ${DYNAMIND_EXTENSIONS_LIBRARY} ${DYNAMIND_TOOLBOX_LIBRARY}  ${DYNAMIND_CORE_LIBRARY} Qt5::Core Qt5::Gui Qt5::Widgets Qt5::OpenGL Qt5::PrintSupport ${Boost_PROGRAM_OPTIONS_LIBRARY} ${OPENGL_LIBRARIES} ${QGLVIEWER_LIBRARIES} ${CGAL_LIBRARIES} ${CGAL_3RD_PARTY_LIBRARIES})
    ELSE()
           TARGET_LINK_LIBRARIES(dynamind-viewer ${DYNAMIND_EXTENSIONS_LIBRARY} ${DYNAMIND_TOOLBOX_LIBRARY}  ${DYNAMIND_CORE_LIBRARY} Qt5::Core Qt5::Gui Qt5::Widgets Qt5::OpenGL Qt5::PrintSupport ${OPENGL_LIBRARIES} ${QGLVIEWER_LIBRARIES} ${CGAL_LIBRARIES} ${CGAL_3RD_PARTY_LIBRARIES}  ${Boost_LIBRARIES})
    ENDIF()
ELSE()
    IF (${CMAKE_CXX_COMPILER_ID} STREQUAL GNU)
           TARGET_LINK_LIBRARIES(dynamind-viewer ${DYNAMIND_EXTENSIONS_LIBRARY} ${DYNAMIND_TOOLBOX_LIBRARY}  ${DYNAMIND_CORE_LIBRARY} ${QT_QTGUI_LIBRARY} ${Boost_PROGRAM_OPTIONS_LIBRARY} ${QT_QTMAIN_LIBRARY} ${OPENGL_LIBRARIES} ${QT_LIBRARIES} ${QGLVIEWER_LIBRARIES} ${CGAL_LIBRARIES} ${CGAL_3RD_PARTY_LIBRARIES})
    ELSE()
           TARGET_LINK_LIBRARIES(dynamind-viewer ${DYNAMIND_EXTENSIONS_LIBRARY} ${DYNAMIND_TOOLBOX_LIBRARY}  ${DYNAMIND_CORE_LIBRARY} ${QT_QTMAIN_LIBRARY} ${OPENGL_LIBRARIES} ${QT_LIBRARIES} ${QGLVIEWER_LIBRARIES} ${CGAL_LIBRARIES} ${CGAL_3RD_PARTY_LIBRARIES}  ${Boost_LIBRARIES})
    ENDIF()
ENDIF()


#INSTALL(TARGETS dynamind-viewer
#        DESTINATION "lib"
#		PERMISSIONS OWNER_WRITE OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)

